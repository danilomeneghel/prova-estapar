version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres_estapar
    hostname: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: estapar 
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d 
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s 

  garage-simulator:
    image: cfontes0estapar/garage-sim:1.0.0
    ports:
      - "3001:3000"
    networks:
      - app-network
    environment:
      - WEBHOOK_URL=http://app_estapar:3003/webhook
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/garage" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_estapar
    environment:
      - MICRONAUT_ENVIRONMENTS=docker
      - DATASOURCES_DEFAULT_URL=jdbc:postgresql://postgres:5432/estapar
      - DATASOURCES_DEFAULT_USERNAME=postgres
      - DATASOURCES_DEFAULT_PASSWORD=postgres
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge